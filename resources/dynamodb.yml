iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamodbTables.MESSAGE_TABLE_NAME}"

Resources:
    MessageTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: ${self:custom.dynamodbTables.MESSAGE_TABLE_NAME}
            AttributeDefinitions:
                - AttributeName: messageId
                  AttributeType: S
                - AttributeName: message
                  AttributeType: S
                - AttributeName: notified
                  AttributeType: BOOL
                - AttributeName: createdDate
                  AttributeType: S
                - AttributeName: notifiedDate
                  AttributeType: S
            KeySchema:
                - AttributeName: messageId
                  KeyType: HASH
            # Set the capacity to auto-scale
            # BillingMode: PAY_PER_REQUEST

custom:
    dynamodbTables:
        MESSAGE_TABLE_NAME: ${self:service}-${opt:stage, self:provider.stage}
    dynamodb:
      stages:
        - local
      start:
        port: 8000
        inMemory: true
        heapInitial: 200m
        heapMax: 1g
        migrate: true
        seed: true
        convertEmptyValues: true